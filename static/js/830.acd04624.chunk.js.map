{"version":3,"file":"static/js/830.acd04624.chunk.js","mappings":"wvCAAO,MAAMA,EAAU,CAAC,EAElBC,EAASA,CAACC,EAAQC,EAAeC,KAChCJ,EAAQE,KACXF,EAAQE,GAAU,CAAC,GAErBF,EAAQE,GAAQE,GAAa,UAAYC,OAAOC,OAAO,CAAC,EAAGN,EAAQE,GAAQE,GAAa,UAAWD,GAC5FH,GAGIO,EAAiBA,CAACC,EAAUJ,KACvCC,OAAOI,KAAKD,GAAUE,SAAQR,IACvBF,EAAQE,KACXF,EAAQE,GAAU,CAAC,GAErBF,EAAQE,GAAQE,GAAa,UAAYC,OAAOC,OAAO,CAAC,EAAGN,EAAQE,GAAQE,GAAa,UAAWI,EAASN,Q,aCC1GS,EAAY,WAAa,QAAAC,EAAAC,UAAAC,OAATC,EAAI,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,GAAAJ,UAAAI,GACxB,MAAuB,kBAAZF,EAAK,IAAoD,kBAA1BA,EAAK,GAAGG,cACzCb,OAAOC,OAAO,CAAC,EAAGS,EAAK,IAGzB,CAAEG,cAAeH,EAAK,GAAII,eAAgBJ,EAAK,GAAIX,UAAWW,EAAK,GAC5E,EAEaK,EAAqB,WAChC,MAAM,cAAEF,EAAa,eAAEC,EAAc,UAAEf,EAAS,SAAEI,GAAaG,KAAUE,WACzEM,GAAkBlB,EAAaiB,EAAeC,EAAgBf,GAC9DI,GAAYD,EAAeC,EAAUJ,GACrC,MAAMiB,EAAiBC,IAAkB,IAAjB,SAAEC,GAAUD,EAElC,OAAOC,GADMC,EAAAA,EAAAA,OAGf,OAAOC,IAAuC,IAApCvB,OAAQwB,EAAW,SAAEH,GAAUE,EAAK,IAAAE,EAC5C,MAAMC,GAAUC,EAAAA,EAAAA,cACV3B,EAASwB,IAAsB,MAAPE,OAAO,EAAPA,EAAS1B,SAAUgB,GAAiB,QAClE,OACEY,IAAAA,cAACC,EAAAA,EAAY,CAACvB,SAAyB,OAAjBmB,EAAE3B,EAAQE,SAAO,EAAfyB,EAAkBvB,GAAa,UAAWF,OAAQA,GACnD,oBAAbqB,EAA0BO,IAAAA,cAACT,EAAgB,KAAAE,GAA6BA,GAIxF,EAEaS,EAAyB,WACpC,MAAM,cAAEd,EAAa,eAAEC,EAAc,UAAEf,EAAS,SAAEI,GAAaG,KAAUE,WAGzE,OAFAM,GAAkBlB,EAAaiB,EAAeC,EAAgBf,GAC9DI,GAAYD,EAAeC,EAAUJ,GAC9B6B,IACLC,EAAAA,EAAAA,aAAW,CAAAC,EAAoCC,KAAQ,IAAAC,EAAA,IAAzCnC,OAAQwB,GAAuBS,EAAPG,E,2IAAKC,CAAAJ,EAAAK,GACzC,MAAMZ,GAAUC,EAAAA,EAAAA,cACV3B,EAASwB,IAAsB,MAAPE,OAAO,EAAPA,EAAS1B,SAAUgB,GAAiB,QAClE,OACEY,IAAAA,cAACC,EAAAA,EAAY,CAACvB,SAAyB,OAAjB6B,EAAErC,EAAQE,SAAO,EAAfmC,EAAkBjC,GAAa,UAAWF,OAAQA,GACxE4B,IAAAA,cAACG,EAAiBQ,EAAA,GAAKH,EAAK,CAAEF,IAAKA,QAI7C,EAIaM,EAAaC,IAA4D,IAAzDzC,OAAA0C,EAAS,QAAS5C,QAAS6C,EAAY,UAAEzC,GAAWuC,EAAK,IAAAG,EAEpF,OADAD,GAAgB5C,EAAa2C,EAAQC,EAAczC,IAC5C2C,EAAAA,EAAAA,GAAe,CAAE7C,OAAA0C,EAAQpC,SAAyB,OAAjBsC,EAAE9C,EAAQ4C,SAAO,EAAfE,EAAkB1C,GAAa,Y","sources":["../../src/loader.js","../../src/index.js"],"sourcesContent":["export const message = {};\n\nconst loader = (locale, localeMessage, namespace) => {\n  if (!message[locale]) {\n    message[locale] = {};\n  }\n  message[locale][namespace || 'global'] = Object.assign({}, message[locale][namespace || 'global'], localeMessage);\n  return message;\n};\n\nexport const messagesLoader = (messages, namespace) => {\n  Object.keys(messages).forEach(locale => {\n    if (!message[locale]) {\n      message[locale] = {};\n    }\n    message[locale][namespace || 'global'] = Object.assign({}, message[locale][namespace || 'global'], messages[locale]);\n  });\n};\n\nexport default loader;\n","import React, { forwardRef } from 'react';\nimport localeLoader, { message, messagesLoader } from './loader';\nimport { IntlProvider, createIntl as createIntlBase, useIntl } from 'react-intl';\nimport { useContext } from '@kne/global-context';\n\nconst withIntlProvider = WrappedComponents =>\n  forwardRef(({ locale: propsLocale, namespace, ...props }, ref) => {\n    const context = useContext();\n    const locale = propsLocale || context?.locale || 'zh-CN';\n    return (\n      <IntlProvider messages={message[locale]?.[namespace || 'global']} locale={locale}>\n        <WrappedComponents {...props} ref={ref} />\n      </IntlProvider>\n    );\n  });\n\nconst argsParse = (...args) => {\n  if (typeof args[0] === 'object' && typeof args[0].defaultLocale === 'string') {\n    return Object.assign({}, args[0]);\n  }\n\n  return { defaultLocale: args[0], defaultMessage: args[1], namespace: args[2] };\n};\n\nexport const createIntlProvider = (...args) => {\n  const { defaultLocale, defaultMessage, namespace, messages } = argsParse(...args);\n  defaultMessage && localeLoader(defaultLocale, defaultMessage, namespace);\n  messages && messagesLoader(messages, namespace);\n  const InnerComponent = ({ children }) => {\n    const intl = useIntl();\n    return children(intl);\n  };\n  return ({ locale: propsLocale, children }) => {\n    const context = useContext();\n    const locale = propsLocale || context?.locale || defaultLocale || 'zh-CN';\n    return (\n      <IntlProvider messages={message[locale]?.[namespace || 'global']} locale={locale}>\n        {typeof children === 'function' ? <InnerComponent>{children}</InnerComponent> : children}\n      </IntlProvider>\n    );\n  };\n};\n\nexport const createWithIntlProvider = (...args) => {\n  const { defaultLocale, defaultMessage, namespace, messages } = argsParse(...args);\n  defaultMessage && localeLoader(defaultLocale, defaultMessage, namespace);\n  messages && messagesLoader(messages, namespace);\n  return WrappedComponents =>\n    forwardRef(({ locale: propsLocale, ...props }, ref) => {\n      const context = useContext();\n      const locale = propsLocale || context?.locale || defaultLocale || 'zh-CN';\n      return (\n        <IntlProvider messages={message[locale]?.[namespace || 'global']} locale={locale}>\n          <WrappedComponents {...props} ref={ref} />\n        </IntlProvider>\n      );\n    });\n};\n\nexport * from 'react-intl';\n\nexport const createIntl = ({ locale = 'zh-CN', message: propsMessage, namespace }) => {\n  propsMessage && localeLoader(locale, propsMessage, namespace);\n  return createIntlBase({ locale, messages: message[locale]?.[namespace || 'global'] });\n};\n\nexport { localeLoader, IntlProvider };\n\nexport default createIntl;\n"],"names":["message","loader","locale","localeMessage","namespace","Object","assign","messagesLoader","messages","keys","forEach","argsParse","_len","arguments","length","args","Array","_key","defaultLocale","defaultMessage","createIntlProvider","InnerComponent","_ref","children","useIntl","_ref3","propsLocale","_message$locale2","context","useContext","React","IntlProvider","createWithIntlProvider","WrappedComponents","forwardRef","_ref2","ref","_message$locale3","props","_objectWithoutPropertiesLoose","_excluded2","_extends","createIntl","_ref4","_locale","propsMessage","_message$_locale","createIntl$1"],"sourceRoot":""}